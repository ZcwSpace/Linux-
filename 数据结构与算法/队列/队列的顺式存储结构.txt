#include <stdio.h>
#include <stdlib.h>
#define MAXSIZE 20
#define ELEMTYPE char
typedef struct
{
	ELEMTYPE *base;
	int front;
	int rear;
}cycle_queue;
void create_queue(cycle_queue *q);
void push_queue(cycle_queue *q, ELEMTYPE e);
void pop_queue(cycle_queue *q);
int main()
{
	cycle_queue queue;
	ELEMTYPE e;
	int i, n;
	create_queue(&queue);
	printf("请输入字符串");
	scanf_s("%c", &e);
	while (e != '#')
	{
		push_queue(&queue, e);
		scanf_s("%c", &e);
	}
	getchar();
	printf("请输入你想取出几个：");
	scanf_s("%d", &n);
	for (i = 1;i <= n;i++)
	{
		pop_queue(&queue);
	}
	for (i = queue.front;i != queue.rear;i = (i + 1) % MAXSIZE)
	{
		printf("%c ", queue.base[i]);
	}
}
void create_queue(cycle_queue *q)
{
	q->base = (ELEMTYPE *)malloc(MAXSIZE * sizeof(ELEMTYPE));
	if (!q->base)
	{
		exit(0);
	}
	q->front = q->rear = 0;
}
void push_queue(cycle_queue *q, ELEMTYPE e)
{
	if ((q->rear + 1) % MAXSIZE == q->front)
	{
		return;
	}
	q->base[q->rear] = e;
	q->rear = (q->rear + 1) % MAXSIZE;
}
void pop_queue(cycle_queue *q)
{
	if (q->front == q->rear)
	{
		return;
	}
	q->front = (q->front + 1)% MAXSIZE;
}