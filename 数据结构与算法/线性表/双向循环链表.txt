#include <stdio.h>
#include <stdlib.h>
struct b
{
	int number;
	struct b *prior;
	struct b *next;
};
#define LENGTH sizeof(struct b)
#define Length 20
struct b *create();
struct b *insert(struct b *L);
struct b *cancel(struct b *L);
int main()
{
	struct b *num, *head;
	num = create();
	num=insert(num);
	num=cancel(num);
	head = num->next;
	num = num->next;
	do
	{
		printf("%d ", num->number);
		num = num->next;
	} while (num != head);
	return 0;
}
struct b *create()
{
	struct b *p, *p1, *head;
	head = NULL;
	int n = 0, i = 1;
	p = p1 = (struct b *)malloc(LENGTH);
	p->number = i;
	i++;
	while (p->number < 21)
	{
		n++;
		if (n == 1)
		{
			head = p;
		}
		else
		{
			p1->next = p;
			p->prior = p1;
			p1 = p;
		}
		p = (struct b *)malloc(LENGTH);
		p->number = i;
		i++;
	}
	p1->next = head;
	head->prior = p1;
	return p1;
}
struct b *insert(struct b *L)
{
	int n, i;
	struct b *p, *p1;
	p = L;
	p1 = (struct b *)malloc(LENGTH);
	printf("请输入你要插入的位置和值：");
	scanf_s("%d %d", &n, &p1->number);
	while (n > 0)
	{
		for (i = 1;i <= n;i++)
		{
			p = p->next;
		}
		p1->next = p->next;
		p->next->prior = p1;
		p->next = p1;
		p1->prior = p;
		if (p == L)
		{
			L = p1;
		}
		p = L;
		p1 = (struct b *)malloc(LENGTH);
		printf("请输入你要插入的位置和值：");
		scanf_s("%d %d", &n, &p1->number);
	}
	return L;
}
struct b *cancel(struct b *L)
{
	struct b *p;
	p = L;
	int n, i;
	printf("请输入你想删除的位置：");
	scanf_s("%d", &n);
	while (n > 0)
	{
		for (i = 1;i <= n;i++)
		{
			p = p->next;
		}
		p->prior->next = p->next;
		p->next->prior = p->prior;
		if (p == L)
		{
			L = p->prior;
		}
		free(p);
		p = L;
		printf("请输入你想删除的位置：");
		scanf_s("%d", &n);
	}
	return L;
}