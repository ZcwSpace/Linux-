#include <stdio.h>
#include <stdlib.h>
struct b
{
	char character;
	struct b *prior;
	struct b *next;
};
#define LENGTH sizeof(struct b)
#define Length 10
struct b *create();
char change(struct b *L, int n);
int main()
{
	struct b *num, *p;
	int n,i,b[Length],LEN;
	char c[Length];
	num = create();
	p = num;
	printf("请输入你想要加密的字符串：");
	scanf_s("%s", c, Length);
	for (i = 0;c[i] != '\0'; i++)/*加密*/
	{
		n = rand() % 100+1;
		b[i] = n;
		for (p;p->character != c[i];p = p->next)
		{
			;
		}
		c[i] = change(p,n);
	}
	LEN = i ;
	printf("加密过后为：");
	for (i = 0;c[i] != '\0';i++)
	{
		printf("%c ", c[i]);
	}
	printf("\n");
	printf("随机密匙为：");
	for (i = 0;i<LEN;i++)
	{
		printf("%d ", b[i]);
	}
	printf("\n");
	for (i = 0;i < LEN;i++)
	{
		b[i]=-b[i];
	}
	for (i = 0;c[i] != '\0'; i++)/*解密*/
	{
		n = b[i];
		for (p;p->character != c[i];p = p->next)
		{
			;
		}
		c[i] = change(p, n);
	}
	printf("解密过后为：");
	for (i = 0;c[i] != '\0';i++)
	{
		printf("%c ", c[i]);
	}
	return 0;
}
struct b *create()
{
	struct b *p, *p1, *head;
	head = NULL;
	int n = 0;
	char i='A';
	p = p1 = (struct b *)malloc(LENGTH);
	p->character = i;
	i++;
	while (p->character<='Z')
	{
		n++;
		if (n == 1)
		{
			head = p;
		}
		else
		{
			p1->next = p;
			p->prior = p1;
			p1 = p;
		}
		p = (struct b *)malloc(LENGTH);
		p->character = i;
		i++;
	}
	p1->next = head;
	head->prior = p1;
	return p1;
}
char change(struct b *L, int n)
{
	int i;
	struct b *p;
	p = L;
	if (n > 0)
	{
		for (i = 1;i <= n;i++)
		{
			p = p->next;
		}
		return p->next->character;
	}
	else if (n < 0)
	{
		for (i = -1;i >= n;i--)
		{
			p = p->prior;
		}
		return p->prior->character;
	}
}